user  nginx;
worker_processes  auto;

error_log /dev/stdout info;

pid        /var/run/nginx.pid;

worker_rlimit_nofile 16384;

events {
    worker_connections 4096;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$http_authorization" "$http_digest" "$request" "$request_body" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout main;
    error_log   /dev/stdout warn;

    keepalive_timeout 30;
    keepalive_requests 100;

    client_max_body_size 1m;
    client_body_timeout 10;
    reset_timedout_connection on;
    send_timeout 2;
    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;

    types_hash_max_size 2048;
    server_tokens off;
    large_client_header_buffers 4 16k;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

    # Maps ip address to $limit variable if request is of type POST
    map $request_method $limit_post {
        default     "";
        POST        $binary_remote_addr;
        # GET        $binary_remote_addr;
    }

    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    #open_file_cache max=100000 inactive=60s;
    #open_file_cache_valid 300s;
    #open_file_cache_min_uses 2;
    #open_file_cache_errors on;#

    server {
      listen 80 default;

      root   /var/www/public;
      index index.php;
      set $no_cache 0;

      # serve static files directly
      location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt)$ {
         add_header Cache-Conxtrol public;
         access_log        off;
         expires           max;
      }

      try_files $uri /index.php?$args;

      location ~ \.php$ {
         try_files $uri =404;
         fastcgi_param SCRIPT_FILENAME $request_filename;
         fastcgi_index index.php;

         fastcgi_param   QUERY_STRING        $query_string;
         fastcgi_param   REQUEST_METHOD      $request_method;
         fastcgi_param   CONTENT_TYPE        $content_type;
         fastcgi_param   CONTENT_LENGTH      $content_length;

         fastcgi_param   SCRIPT_NAME         $fastcgi_script_name;
         fastcgi_param   REQUEST_URI         $request_uri;
         fastcgi_param   DOCUMENT_URI        $document_uri;
         fastcgi_param   DOCUMENT_ROOT       $document_root;
         fastcgi_param   SERVER_PROTOCOL     $server_protocol;
         fastcgi_param   SCRIPT_FILENAME     $document_root$fastcgi_script_name;
         fastcgi_param   PATH_INFO           $fastcgi_script_name;

         fastcgi_param   GATEWAY_INTERFACE   CGI/1.1;
         fastcgi_param   SERVER_SOFTWARE     nginx/$nginx_version;

         fastcgi_param   REMOTE_ADDR     $remote_addr;
         fastcgi_param   REMOTE_PORT     $remote_port;
         fastcgi_param   SERVER_ADDR     $server_addr;
         fastcgi_param   SERVER_PORT     $server_port;
         fastcgi_param   SERVER_NAME     $server_name;

         # PHP only, required if PHP was built with --enable-force-cgi-redirect
         fastcgi_param   REDIRECT_STATUS     200;

         fastcgi_pass {{ (getenv "PHP_FPM_PASS" "127.0.0.1") }}:9000;
         fastcgi_split_path_info ^(.+\.php)(/.*)$;
         fastcgi_read_timeout 120s;
      }
    }
}
